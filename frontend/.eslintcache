[{"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\index.js":"1","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\Routes.js":"2","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\UserDashboard.js":"3","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\AdminDashboard.js":"4","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Home.js":"5","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Shop.js":"6","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\Signin.js":"7","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\auth\\AdminRoute.js":"8","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Cart.js":"9","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\Signup.js":"10","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\Profile.js":"11","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\AddProduct.js":"12","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\AddCategory.js":"13","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\UpdateProduct.js":"14","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\auth\\PrivrateRoute.js":"15","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\ManageProducts.js":"16","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Product.js":"17","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Layout.js":"18","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\apiUser.js":"19","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\apiCore.js":"20","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\RadioBox.js":"21","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\auth\\index.js":"22","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\fixedPrices.js":"23","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Checkbox.js":"24","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Search.js":"25","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\cartHelpers.js":"26","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\apiAdmin.js":"27","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Card.js":"28","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Checkout.js":"29","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\config.js":"30","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\ShowImage.js":"31","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Menu.js":"32"},{"size":208,"mtime":1607570476442,"results":"33","hashOfConfig":"34"},{"size":2034,"mtime":1614038124133,"results":"35","hashOfConfig":"34"},{"size":4118,"mtime":1614014974936,"results":"36","hashOfConfig":"34"},{"size":2423,"mtime":1614021758325,"results":"37","hashOfConfig":"34"},{"size":2373,"mtime":1618790405664,"results":"38","hashOfConfig":"34"},{"size":4601,"mtime":1613553190674,"results":"39","hashOfConfig":"34"},{"size":2861,"mtime":1607790839609,"results":"40","hashOfConfig":"34"},{"size":662,"mtime":1609988332787,"results":"41","hashOfConfig":"34"},{"size":1864,"mtime":1614037569761,"results":"42","hashOfConfig":"34"},{"size":2652,"mtime":1607643419806,"results":"43","hashOfConfig":"34"},{"size":3048,"mtime":1614013748810,"results":"44","hashOfConfig":"34"},{"size":7985,"mtime":1615618647691,"results":"45","hashOfConfig":"34"},{"size":2599,"mtime":1607887349763,"results":"46","hashOfConfig":"34"},{"size":6810,"mtime":1614020852471,"results":"47","hashOfConfig":"34"},{"size":629,"mtime":1607727372933,"results":"48","hashOfConfig":"34"},{"size":2564,"mtime":1614015114009,"results":"49","hashOfConfig":"34"},{"size":2771,"mtime":1614988968246,"results":"50","hashOfConfig":"34"},{"size":433,"mtime":1608040120232,"results":"51","hashOfConfig":"34"},{"size":1675,"mtime":1613781732703,"results":"52","hashOfConfig":"34"},{"size":3395,"mtime":1609796174270,"results":"53","hashOfConfig":"34"},{"size":660,"mtime":1608244393284,"results":"54","hashOfConfig":"34"},{"size":1714,"mtime":1607710362548,"results":"55","hashOfConfig":"34"},{"size":530,"mtime":1608244231596,"results":"56","hashOfConfig":"34"},{"size":1189,"mtime":1608128848624,"results":"57","hashOfConfig":"34"},{"size":3911,"mtime":1619887240336,"results":"58","hashOfConfig":"34"},{"size":2569,"mtime":1613684237009,"results":"59","hashOfConfig":"34"},{"size":4811,"mtime":1607889269061,"results":"60","hashOfConfig":"34"},{"size":3898,"mtime":1615619007298,"results":"61","hashOfConfig":"34"},{"size":914,"mtime":1613778570478,"results":"62","hashOfConfig":"34"},{"size":49,"mtime":1607589464474,"results":"63","hashOfConfig":"34"},{"size":383,"mtime":1608039556405,"results":"64","hashOfConfig":"34"},{"size":9923,"mtime":1619887466983,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1u371nz",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"68"},"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\index.js",[],["147","148"],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\Routes.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\UserDashboard.js",["149"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n    const token = isAuthenticated().token;\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error); \r\n            } else {\r\n                setHistory(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: ${p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {moment(\r\n                                                        p.createdAt\r\n                                                    ).fromNow()}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\AdminDashboard.js",["150"],"import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Home.js",["151"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsBySell(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            console.log(data);\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsByArrival(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Covenant University Shopping Mall\"\r\n            description=\"Find Anything You Need In School Online\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search/>\r\n            <div className=\"home-style\">\r\n\r\n            \r\n            {/* <Search /> */}\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n\r\n                        <Fragment className=\"row\">\r\n                        <div key={i} className=\"col-sm-3 mb-3\">\r\n                            <Card product={product} />\r\n                        </div>\r\n                        </Fragment>\r\n                            \r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    \r\n                    <Fragment className=\"row\">\r\n                    <div key={i} className=\"col-sm-3 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                    </Fragment>\r\n                    \r\n                ))}\r\n            </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default Home;","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Shop.js",["152","153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Card from \"./Card\";\r\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport RadioBox from \"./RadioBox\";\r\nimport { prices } from \"./fixedPrices\";\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [limit, setLimit] = useState(6);\r\n    const [skip, setSkip] = useState(0);\r\n    const [size, setSize] = useState(0);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadFilteredResults = newFilters => {\r\n        // console.log(newFilters);\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults(data.data);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit;\r\n        // console.log(newFilters);\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data]);\r\n                setSize(data.size);\r\n                setSkip(toSkip);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 &&\r\n            size >= limit && (\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                    Load more\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(skip, limit, myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        // console.log(\"SHOP\", filters, filterBy);\r\n        const newFilters = { ...myFilters };\r\n        newFilters.filters[filterBy] = filters;\r\n\r\n        if (filterBy === \"price\") {\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n        loadFilteredResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n    };\r\n\r\n    const handlePrice = value => {\r\n        const data = prices;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find books of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"category\")\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter by price range</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"price\")\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, i) => (\r\n                            \r\n                        <div key={i} className=\"col-4 mb-3\">\r\n                            <Card product={product} />\r\n                        </div>\r\n                            \r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Shop;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\Signin.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\auth\\AdminRoute.js",["155"],"import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Cart.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\Signup.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\Profile.js",["156","157","158"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({match}) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: 'false',\r\n        success: false\r\n    });\r\n\r\n    const {token} = isAuthenticated()\r\n\r\n    const {name, email, password, error, success} = values\r\n\r\n    const init = (userId) => {\r\n        // console.log(userId)\r\n        read(userId, token).then(data => {\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email})\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(match.params.userId)\r\n    }, []);\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, error: false, [name]: e.target.value });\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        update(match.params.userId, token, { name, email, password }).then(data => {\r\n            if (data.error) {\r\n                // console.log(data.error);\r\n                alert(data.error);\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        success: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const redirectUser = success => {\r\n        if (success) {\r\n            return <Redirect to=\"/cart\" />;\r\n        }\r\n    };\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Profile update</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\AddProduct.js",["159","160","161","162","163","164"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        location: '',\r\n        telegram_no: '',\r\n        instagram_handle: '',\r\n        _isNew: '',\r\n        _store: '',\r\n        photo: '',\r\n        email_address: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        email_address,\r\n        location,\r\n        telegram_no,\r\n        instagram_handle,\r\n        _isNew,\r\n        _store,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    // load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    location: '',\r\n                    telegram_no: '',\r\n                    instagram_handle: '',\r\n                    _isNew: '',\r\n                    _store: '',\r\n                    email_address: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name Of Seller Or Store</label>\r\n                <input onChange={handleChange('_store')} className=\"form-control\" value={_store} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Is The Porduct New</label>\r\n                <select onChange={handleChange('_isNew')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">Yes</option>\r\n                    <option value=\"1\">No</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Location</label>\r\n                <textarea onChange={handleChange('location')} className=\"form-control\" value={location} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email Address</label>\r\n                <input onChange={handleChange('email_address')} type=\"email\" className=\"form-control\" value={email_address} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Telegram Phone Number</label>\r\n                <input onChange={handleChange('telegram_no')} type=\"text\" className=\"form-control\" value={telegram_no} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Instagram Handle</label>\r\n                <input onChange={handleChange('instagram_handle')} type=\"text\" className=\"form-control\" value={instagram_handle} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">New</option>\r\n                    <option value=\"1\">Used</option>\r\n                    <option value=\"1\">Manufactured</option>\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\AddCategory.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\UpdateProduct.js",["165","166","167","168"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\auth\\PrivrateRoute.js",["169"],"import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\ManageProducts.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Product.js",["170"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { read, listRelated } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Product = props => {\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadSingleProduct = productId => {\r\n        read(productId).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id).then(data => {\r\n                    if (data.error) {\r\n                        setError(data.error);\r\n                    } else {\r\n                        setRelatedProduct(data);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    }, [props]);\r\n\r\n    return(\r\n        <Layout\r\n            title={product && product.name}\r\n            description={product && product.description && product.description.substring(0, 100)}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"product-style\">\r\n\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\r\n                </div>\r\n                \r\n                <div className=\"col-6\">\r\n                <div className=\"card\">\r\n                <div className=\"card-header name\">\r\n                    <h3>Product Details</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <h6>Product Location: </h6>{product.location}\r\n                <h6>Seller: </h6>{product.location}\r\n                <h6>Seller Instagram: </h6>{product.instagram_handle}\r\n                <h6>Seller Telegram: </h6>{product.telegram_no}\r\n                <h6>Seller Email: </h6>{product.email_address}\r\n                \r\n                </div>\r\n                \r\n                </div>\r\n\r\n                </div>\r\n\r\n                \r\n                    <h4 className=\"mb-4 mt-4\">Related products</h4>\r\n                    <div className=\"row\">\r\n                    {relatedProduct.map((p, i) => (\r\n                        <div className=\"mb-3 related-product col-sm-3\" key={i}>\r\n                            <Card product={p} />\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n               \r\n            \r\n\r\n            </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Product;","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Layout.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\user\\apiUser.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\apiCore.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\RadioBox.js",["171"],"import React, { useState } from \"react\";\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = event => {\r\n        handleFilters(event.target.value);\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return prices.map((p, i) => (\r\n        <div key={i}>\r\n            <input\r\n                onChange={handleChange}\r\n                value={`${p._id}`}\r\n                name={p}\r\n                type=\"radio\"\r\n                className=\"mr-2 ml-4\"\r\n            />\r\n            <label className=\"form-check-label\">{p.name}</label>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default RadioBox;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\auth\\index.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\fixedPrices.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Checkbox.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Search.js",["172"],"import React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        console.log(search, category);\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    } \r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n\r\n                <div className=\"row\">\r\n                    {results.map((product, i) => (\r\n                        <div className=\"col-4 mb-3\">\r\n                            <Card key={i} product={product} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        {/* <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select> */}\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\cartHelpers.js",["173","174"],"export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\admin\\apiAdmin.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Card.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Checkout.js",["175","176","177","178","179"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport {isAuthenticated} from '../auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Checkout = ({products}) =>{\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0)\r\n    }\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <button className=\"btn btn-success\">Checkout</button>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign In To Checkout</button>\r\n            </Link>\r\n            \r\n        )\r\n    }\r\n    return <div>\r\n        <h2>Total: ${getTotal()}</h2>\r\n\r\n        {showCheckout()}\r\n    </div>;\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\config.js",[],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\ShowImage.js",[],["180","181"],"C:\\Users\\bolua\\Documents\\webprojects\\CUSM\\frontend\\src\\core\\Menu.js",["182","183"],"import React, { Fragment } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {signout, isAuthenticated} from '../auth';\r\nimport {addItem, itemTotal} from './cartHelpers';\r\n \r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: \"#ff9900\" };\r\n    } else {\r\n        return { color: \"#ffffff\" };\r\n    }\r\n}\r\n\r\n\r\n    \r\n\r\n\r\nconst Menu = ({history}) => (\r\n    <div>\r\n        <div class=\"navy sticky-top\">\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n\r\n            <a href=\"Boluwatife Ajayi Resume.pdf\" target=\"_blank\" class=\"brand\" href=\"#\"\r\n                >Resume</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\" style={isActive(history, '/')}>Home</Link>\r\n            </li>\r\n            \r\n            \r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    About \r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Categories\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Sell On CUSM\r\n                </Link>\r\n            </li>\r\n\r\n            \r\n            \r\n\r\n            \r\n        </ul>\r\n                <div class=\"form-inline my-2 \">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/cart\")}\r\n                    to=\"/cart\"\r\n                >\r\n                    Cart{\" \"}\r\n                    <sup>\r\n                        <small className=\"cart-badge\">{itemTotal()}</small>\r\n                    </sup>\r\n                </Link>\r\n\r\n        {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                \r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/user/dashboard\")}\r\n                        to=\"/user/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n               \r\n            )}\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                \r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/admin/dashboard\")}\r\n                        to=\"/admin/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                \r\n            )}\r\n        {!isAuthenticated() && (\r\n                <Fragment>\r\n                    \r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signin\")}\r\n                            to=\"/signin\"\r\n                        >\r\n                            Signin\r\n                        </Link>\r\n                   \r\n\r\n                    \r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signup\")}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Signup\r\n                        </Link>\r\n                    \r\n                </Fragment>\r\n            )}\r\n            \r\n            {isAuthenticated() && (\r\n                \r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                        onClick={() =>\r\n                            signout(() => {\r\n                                history.push(\"/\");\r\n                            })\r\n                        }\r\n                    >\r\n                        Signout\r\n                    </span>\r\n                \r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    </div>\r\n        {/* <div className=\"navy sticky-top\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary sticky-top\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\" style={isActive(history, '/')}>Home</Link>\r\n            </li>\r\n            \r\n            \r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    About \r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Categories\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Sell On CUSM\r\n                </Link>\r\n            </li>\r\n\r\n            <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/cart\")}\r\n                    to=\"/cart\"\r\n                >\r\n                    Cart{\" \"}\r\n                    <sup>\r\n                        <small className=\"cart-badge\">{itemTotal()}</small>\r\n                    </sup>\r\n                </Link>\r\n\r\n        {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                \r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/user/dashboard\")}\r\n                        to=\"/user/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n               \r\n            )}\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                \r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/admin/dashboard\")}\r\n                        to=\"/admin/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                \r\n            )}\r\n        {!isAuthenticated() && (\r\n                <Fragment>\r\n                    \r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signin\")}\r\n                            to=\"/signin\"\r\n                        >\r\n                            Signin\r\n                        </Link>\r\n                   \r\n\r\n                    \r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signup\")}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Signup\r\n                        </Link>\r\n                    \r\n                </Fragment>\r\n            )}\r\n            \r\n            {isAuthenticated() && (\r\n                \r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                        onClick={() =>\r\n                            signout(() => {\r\n                                history.push(\"/\");\r\n                            })\r\n                        }\r\n                    >\r\n                        Signout\r\n                    </span>\r\n                \r\n            )}\r\n\r\n            \r\n\r\n            \r\n        </ul>\r\n        <div class=\"form-inline my-2 \">\r\n            <a href=\"mailto:bolu4good@gmail.com\" style={{color: \"white\"}}>bolu4good@gmail.com</a>\r\n        </div>\r\n        \r\n                \r\n        </nav>\r\n        </div> */}\r\n    </div>\r\n);\r\n\r\nexport default withRouter(Menu);",{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":28,"column":8,"nodeType":"190","endLine":28,"endColumn":10,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":8,"column":17,"nodeType":"194","messageId":"195","endLine":8,"endColumn":20},{"ruleId":"192","severity":1,"message":"196","line":12,"column":12,"nodeType":"194","messageId":"195","endLine":12,"endColumn":17},{"ruleId":"192","severity":1,"message":"196","line":14,"column":12,"nodeType":"194","messageId":"195","endLine":14,"endColumn":17},{"ruleId":"192","severity":1,"message":"197","line":15,"column":19,"nodeType":"194","messageId":"195","endLine":15,"endColumn":27},{"ruleId":"188","severity":1,"message":"198","line":71,"column":8,"nodeType":"190","endLine":71,"endColumn":10,"suggestions":"199"},{"ruleId":"192","severity":1,"message":"200","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"201","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":14},{"ruleId":"192","severity":1,"message":"196","line":18,"column":35,"nodeType":"194","messageId":"195","endLine":18,"endColumn":40},{"ruleId":"188","severity":1,"message":"202","line":34,"column":8,"nodeType":"190","endLine":34,"endColumn":10,"suggestions":"203"},{"ruleId":"192","severity":1,"message":"201","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":14},{"ruleId":"192","severity":1,"message":"204","line":36,"column":9,"nodeType":"194","messageId":"195","endLine":36,"endColumn":17},{"ruleId":"192","severity":1,"message":"205","line":37,"column":9,"nodeType":"194","messageId":"195","endLine":37,"endColumn":17},{"ruleId":"192","severity":1,"message":"206","line":43,"column":9,"nodeType":"194","messageId":"195","endLine":43,"endColumn":15},{"ruleId":"192","severity":1,"message":"207","line":48,"column":9,"nodeType":"194","messageId":"195","endLine":48,"endColumn":26},{"ruleId":"188","severity":1,"message":"208","line":69,"column":8,"nodeType":"190","endLine":69,"endColumn":10,"suggestions":"209"},{"ruleId":"192","severity":1,"message":"201","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":14},{"ruleId":"192","severity":1,"message":"204","line":31,"column":9,"nodeType":"194","messageId":"195","endLine":31,"endColumn":17},{"ruleId":"192","severity":1,"message":"205","line":32,"column":9,"nodeType":"194","messageId":"195","endLine":32,"endColumn":17},{"ruleId":"188","severity":1,"message":"210","line":76,"column":8,"nodeType":"190","endLine":76,"endColumn":10,"suggestions":"211"},{"ruleId":"192","severity":1,"message":"200","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"196","line":9,"column":12,"nodeType":"194","messageId":"195","endLine":9,"endColumn":17},{"ruleId":"192","severity":1,"message":"212","line":4,"column":12,"nodeType":"194","messageId":"195","endLine":4,"endColumn":17},{"ruleId":"192","severity":1,"message":"213","line":14,"column":13,"nodeType":"194","messageId":"195","endLine":14,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":55,"column":31,"nodeType":"216","messageId":"217","endLine":55,"endColumn":33},{"ruleId":"214","severity":1,"message":"215","line":72,"column":31,"nodeType":"216","messageId":"217","endLine":72,"endColumn":33},{"ruleId":"192","severity":1,"message":"218","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"219","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"220","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"221","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":21},{"ruleId":"192","severity":1,"message":"222","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":12},{"ruleId":"184","replacedBy":"223"},{"ruleId":"186","replacedBy":"224"},{"ruleId":"192","severity":1,"message":"225","line":4,"column":9,"nodeType":"194","messageId":"195","endLine":4,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":23,"column":81,"nodeType":"228","endLine":23,"endColumn":89},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["231"],"no-unused-vars","'_id' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["232"],"'Component' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["233"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'_isNew' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["235"],"'value' is assigned a value but never used.","'categories' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'Layout' is defined but never used.","'getProducts' is defined but never used.","'Card' is defined but never used.",["229"],["230"],"'addItem' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [_id, token]",{"range":"246","text":"247"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"248","text":"249"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"250","text":"251"},"Update the dependencies array to be: [init]",{"range":"252","text":"253"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"254","text":"255"},[788,790],"[_id, token]",[2199,2201],"[limit, loadFilteredResults, myFilters.filters, skip]",[946,948],"[init, match.params.userId]",[1699,1701],"[init]",[2163,2165],"[init, match.params.productId]"]